#ifndef AMateria_HPP
#define AMateria_HPP

class AMateria
{
    public :
        AMateria(void);
        AMateria(const AMateria &cop);
        AMateria &operator=(const AMateria &eg);
        virtual ~AMateria(void);
    private :

};

#endif

#include "AMateria.hpp"

AMateria::AMateria(void)
{
    return;
}
AMateria::AMateria(const AMateria &cop)
{
    *this = cop;
}
AMateria &AMateria::operator=(const AMateria &eg)
{
    
}
AMateria::~AMateria(void)
{
    return;
}

std::string AMateria::getType(void) const
{
    return (this->type);
}

void AMateria::setType(std::string str)
{
    this->type = str;
}