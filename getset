#ifndef SCALARCONVERTER_HPP
#define SCALARCONVERTER_HPP

class ScalarConverter
{
    public :
        ScalarConverter(void);
        ScalarConverter(const ScalarConverter &cop);
        ScalarConverter &operator=(const ScalarConverter &eg);
        virtual ~ScalarConverter(void);
    private :

};

#endif

#include "ScalarConverter.hpp"

ScalarConverter::ScalarConverter(void)
{
    return;
}
ScalarConverter::ScalarConverter(const ScalarConverter &cop)
{
    *this = cop;
}
ScalarConverter &ScalarConverter::operator=(const ScalarConverter &eg)
{
    if (this != &eg)
    {

    }
    return (*this);
}
ScalarConverter::~ScalarConverter(void)
{
    return;
}

std::string ScalarConverter::getTarget(void) const
{
    return (this->_target);
}

void ScalarConverter::settarget(std::string str)
{
    this->_target = str;
}

