#ifndef BitcoinExchanger_HPP
#define BitcoinExchanger_HPP

class BitcoinExchanger
{
    public :
        BitcoinExchanger(void);
        BitcoinExchanger(const BitcoinExchanger &cop);
        BitcoinExchanger &operator=(const BitcoinExchanger &eg);
        virtual ~BitcoinExchanger(void);
    private :

};

#endif

#include "BitcoinExchanger.hpp"

BitcoinExchanger::BitcoinExchanger(void)
{
    return;
}
BitcoinExchanger::BitcoinExchanger(const BitcoinExchanger &cop)
{
    *this = cop;
}
BitcoinExchanger &BitcoinExchanger::operator=(const BitcoinExchanger &eg)
{
    if (this != &eg)
    {

    }
    return (*this);
}
BitcoinExchanger::~BitcoinExchanger(void)
{
    return;
}

std::string BitcoinExchanger::getTarget(void) const
{
    return (this->_target);
}

void BitcoinExchanger::settarget(std::string str)
{
    this->_target = str;
}

