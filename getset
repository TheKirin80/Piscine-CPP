#ifndef RPN_HPP
#define RPN_HPP

class RPN
{
    public :
        RPN(void);
        RPN(const RPN &cop);
        RPN &operator=(const RPN &eg);
        virtual ~RPN(void);
    private :

};

#endif

#include "RPN.hpp"

RPN::RPN(void)
{
    return;
}
RPN::RPN(const RPN &cop)
{
    *this = cop;
}
RPN &RPN::operator=(const RPN &eg)
{
    if (this != &eg)
    {

    }
    return (*this);
}
RPN::~RPN(void)
{
    return;
}

std::string RPN::getTarget(void) const
{
    return (this->_target);
}

void RPN::settarget(std::string str)
{
    this->_target = str;
}

