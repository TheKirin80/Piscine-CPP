#ifndef INTERN_HPP
#define INTERN_HPP

class Intern
{
    public :
        Intern(void);
        Intern(const Intern &cop);
        Intern &operator=(const Intern &eg);
        virtual ~Intern(void);
    private :

};

#endif

#include "Intern.hpp"

Intern::Intern(void)
{
    return;
}
Intern::Intern(const Intern &cop)
{
    *this = cop;
}
Intern &Intern::operator=(const Intern &eg)
{
    if (this != &eg)
    {

    }
    return (*this);
}
Intern::~Intern(void)
{
    return;
}

std::string Intern::getTarget(void) const
{
    return (this->_target);
}

void Intern::settarget(std::string str)
{
    this->_target = str;
}

