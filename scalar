#include "ScalarConverter.hpp"

ScalarConverter::ScalarConverter(void)
{
    return;
}
ScalarConverter::ScalarConverter(const ScalarConverter &cop)
{
    *this = cop;
}
ScalarConverter &ScalarConverter::operator=(const ScalarConverter &eg)
{
    if (this != &eg)
    {
        (void)eg;
    }
    return (*this);
}
ScalarConverter::~ScalarConverter(void)
{
    return;
}

void ScalarConverter::convert (std::string str)
{
    double stack;

    stack = strtod(str.c_str(), NULL); // transforme la chaine en une valeur numerique
    //std::cout << "stack : " << stack << "    " << (sqrt(-1)) << std::endl;
    //------CHAR------
    std::cout << "char : ";
    if (isnan(stack) || stack < -128 || stack > 127)
        std::cout << "impossible" << std::endl;
    else if (isprint(static_cast<char>(stack)))
        std::cout << "'" << static_cast<char>(stack) << "'" << std::endl;
    else
        std::cout << "Non displayable" << std::endl;
    //------INT-------
    std::cout << "int : ";
    if (isnan(stack) || stack < INT_MIN || stack > INT_MAX)
        std::cout << "impossible" << std::endl;
    else
        std::cout << static_cast<int>(stack) << std::endl;
    //std::setprecision(1) permet de set la precision a un chiffre apres la virgule pour correspondre au sujet(iomanip).
    //std::fixed est utilise de maniere fonctionnel afin de maintenir la precision
    //------FLOAT-----
    std::cout << "float : " << std::fixed << std::setprecision(1) << static_cast<float>(stack) << "f" << std::endl;
    //------DOUBLE----
    std::cout << "double : " << std::fixed << std::setprecision(1) << static_cast<double>(stack) << std::endl;
}